// Copyright 2024 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ChainPolicyApplyConfiguration represents an declarative configuration of the ChainPolicy type for use
// with apply.
type ChainPolicyApplyConfiguration struct {
	ID       *string                                  `json:"id,omitempty"`
	Schedule *ScheduleApplyConfiguration              `json:"schedule,omitempty"`
	Policy   *FleetAutoscalerPolicyApplyConfiguration `json:"policy,omitempty"`
}

// ChainPolicyApplyConfiguration constructs an declarative configuration of the ChainPolicy type for use with
// apply.
func ChainPolicy() *ChainPolicyApplyConfiguration {
	return &ChainPolicyApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *ChainPolicyApplyConfiguration) WithID(value string) *ChainPolicyApplyConfiguration {
	b.ID = &value
	return b
}

// WithSchedule sets the Schedule field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Schedule field is set to the value of the last call.
func (b *ChainPolicyApplyConfiguration) WithSchedule(value *ScheduleApplyConfiguration) *ChainPolicyApplyConfiguration {
	b.Schedule = value
	return b
}

// WithPolicy sets the Policy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Policy field is set to the value of the last call.
func (b *ChainPolicyApplyConfiguration) WithPolicy(value *FleetAutoscalerPolicyApplyConfiguration) *ChainPolicyApplyConfiguration {
	b.Policy = value
	return b
}
